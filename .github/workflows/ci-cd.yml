name: CI/CD Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/veritas-justice-system

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install backend dependencies
      run: npm ci
      
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Install blockchain dependencies
      run: |
        cd blockchain
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Compile blockchain contracts
      run: |
        cd blockchain
        npm run compile
        
    - name: Run backend tests (if any)
      run: npm test || echo "No tests configured"
      continue-on-error: true

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Deploy to Azure VM
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.AZURE_VM_HOST }}
        username: ${{ secrets.AZURE_VM_USERNAME }}
        key: ${{ secrets.AZURE_VM_SSH_KEY }}
        port: ${{ secrets.AZURE_VM_PORT || 22 }}
        script: |
          # Set variables
          IMAGE_NAME="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          CONTAINER_NAME="veritas-justice-system"
          
          # Log in to DockerHub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          
          # Stop and remove existing container if it exists
          docker stop $CONTAINER_NAME || true
          docker rm $CONTAINER_NAME || true
          
          # Pull the latest image
          docker pull $IMAGE_NAME
          
          # Run the new container
          docker run -d \
            --name $CONTAINER_NAME \
            --restart unless-stopped \
            -p 3001:3001 \
            -e NODE_ENV=production \
            -e PORT=3001 \
            -e DATABASE_URL="${{ secrets.DATABASE_URL }}" \
            -e JWT_SECRET="${{ secrets.JWT_SECRET }}" \
            -e JWT_EXPIRES_IN="${{ secrets.JWT_EXPIRES_IN }}" \
            -e EMAIL_HOST="${{ secrets.EMAIL_HOST }}" \
            -e EMAIL_PORT="${{ secrets.EMAIL_PORT }}" \
            -e EMAIL_SECURE="${{ secrets.EMAIL_SECURE }}" \
            -e EMAIL_USER="${{ secrets.EMAIL_USER }}" \
            -e EMAIL_PASS="${{ secrets.EMAIL_PASS }}" \
            -e PINATA_API_Key="${{ secrets.PINATA_API_Key }}" \
            -e PINATA_API_Secret="${{ secrets.PINATA_API_Secret }}" \
            -e PRIVATE_KEY="${{ secrets.PRIVATE_KEY }}" \
            -e CELO_SEPOLIA_RPC_URL="${{ secrets.CELO_SEPOLIA_RPC_URL }}" \
            -e CELOSCAN_API_KEY="${{ secrets.CELOSCAN_API_KEY }}" \
            -e CONTRACT_ADDRESS="${{ secrets.CONTRACT_ADDRESS }}" \
            -e BLOCKCHAIN_TEST_MODE="${{ secrets.BLOCKCHAIN_TEST_MODE }}" \
            -e FRONTEND_URL="${{ secrets.FRONTEND_URL }}" \
            -e ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}" \
            -v /var/log/veritas:/app/logs \
            $IMAGE_NAME
          
          # Clean up old images
          docker image prune -f
          
          # Show running containers
          docker ps
          
          echo "Deployment completed successfully!"

  notify:
    needs: [test, build-and-push, deploy]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        if [ "${{ needs.deploy.result }}" == "success" ]; then
          echo "‚úÖ Deployment successful!"
          echo "üöÄ Veritas Justice System has been deployed to Azure VM"
          echo "üåê Application should be available at: http://${{ secrets.AZURE_VM_HOST }}:3001"
        elif [ "${{ needs.deploy.result }}" == "failure" ]; then
          echo "‚ùå Deployment failed!"
          echo "üîç Check the logs for more details"
        else
          echo "‚ö†Ô∏è Deployment status: ${{ needs.deploy.result }}"
        fi
